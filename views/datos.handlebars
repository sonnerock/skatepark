<h1>Skate Park</h1>

<div class="py-4">
  <h2>Datos del perfil</h2>
  <hr class="w-50" />

  <form>
    <div class="form-group row w-50 m-auto">
      <div class="form-group col-12 col-sm-6">
        <label>Email</label>
        <input class="form-control m-auto" disabled name="email" value="{{skater.email}}" />
      </div>
      <div class="form-group col-12 col-sm-6">
        <label>Nombre</label>
        <input type="text" name="nombre" class="form-control m-auto" value="{{skater.nombre}}" />
      </div>
      <div class="form-group col-12 col-sm-6">
        <label>Password</label>
        <input type="password" name="password" class="form-control m-auto" value="" />
      </div>
      <div class="form-group col-12 col-sm-6">
        <label>Repita la password</label>
        <input type="password" name="password2" class="form-control m-auto" value="" />
      </div>
      <div class="form-group col-12 col-sm-6">
        <label>Años de experiencia</label>
        <input type="number" name="anos_experiencia" class="form-control m-auto" value="{{skater.anos_experiencia}}" />
      </div>
      <div class="form-group col-12 col-sm-6">
        <label>Especialidad</label>
        <input type="text" name="especialidad" class="form-control m-auto" value="{{skater.especialidad}}" />
      </div>
    </div>
    <div class="mb-1">
      <button class="btn btn-primary">Actualizar</button>
    </div>
    <div>
      <button class="btn btn-danger">Eliminar cuenta</button>
    </div>
  </form>
</div>

<script>
  document.getElementById("update").addEventListener("submit", async (event) => {
    event.preventDefault()

    const action = event.submitter.name
    if (action == 'actualizar') {
      const { password, password2 } = event.target

      if (password.value != password2.value) {
        alert('Password son distintos')
        return
      }

      try {
        const formData = new FormData(event.target)
        formData.append("email", event.target.email.value)

        const response = await fetch("/skaters", {
          method: "PUT",
          body: formData
        })

        const data = await response.json()
        if (response.status == 500) {
          throw new Error("Error de servidor")
        }

        if (response.status == 200) {
          alert(`Usuario ${data.skater[0].email} actualizado con éxito`)
          window.location = "/"
        }

      } catch (error) {
        alert('Error actualizando usuario')
        console.error("Network error", error)
      }
    } else {
      const email = event.target.email.value

      const response = await fetch(`/skaters?email=${email}`, {
        method: "DELETE",
      })

      const data = response.json()

      if (response.status == 500) {
        alert("Error de servidor, inténtalo más tarde")
      } else {
        alert("Usuario eliminado con éxito")
        window.location = "/"
      }
    }
  })
</script>